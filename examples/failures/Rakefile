$LOAD_PATH.unshift File.expand_path("..", __FILE__)
require 'webspicy'
require 'webspicy/web'
require 'app'
require 'differ'

task :suite do
  t = Webspicy::Tester.new(Path.dir/'webspicy/suite.rb')
  t.call!
end

task :test do
  t = Webspicy::Tester.new(Path.dir/'webspicy/test.rb')
  config = t.config
  summary = config.reporter.find(Webspicy::Tester::Reporter::Summary)
  success_or_not = config.reporter.find(Webspicy::Tester::Reporter::SuccessOrNot)

  t.call

  if summary.success? || success_or_not.success?
    abort("Expected to fail, it passes")
  end

  unless (x = summary.spec_file_errors_count) == 1
    abort("FAILURE: Expected 1 spec_file error, got #{x}")
  end

  unless (x = summary.errors_count) == 1
    abort("FAILURE: Expected 1 errors, got #{x}")
  end

  unless (x = summary.failures_count) == 19
    abort("FAILURE: Expected 19 failures, got #{x}")
  end

  unless (x = success_or_not.report) == 21
    abort("FAILURE: Expected success or not report to be 21, got #{x}")
  end

  [:documentation, :progress, :summary, :junitxml].each do |kind|
    doc = (Path.dir/"expected/#{kind}.output.txt")
    got = config.world.send(:"#{kind}_output").string
    doc.write(got) unless doc.file?
    unless got.gsub(/time="[^"]+"/,"") == (exp = doc.read.gsub(/time="[^"]+"/,""))
      Differ.format = :color
      puts Differ.diff(got, exp)
      abort("FAILURE: Unexpected #{kind} output")
    end
  end
end

task :default => :test
