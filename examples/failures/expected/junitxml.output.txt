<?xml version="1.0" encoding="UTF-8"?>
<testsuites
  disabled="0"
  errors="1"
  failures="20"
  tests="21"
  time="0.031576s"
>
    <testsuite
      name="formaldef/wrong-assertion.yml"
      tests="4"
      errors="0"
      failures="4"
      time="0.008475s"
    >
        <testcase
          name="when the assertions are ok"
          assertions="4"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.007326s"
        >
        </testcase>
        <testcase
          name="when an empty is wrong"
          assertions="2"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000337s"
        >
            <failure
              message="Expected {&quot;ok&quot;:true,&quot;hobbies&quot;:[&quot;pro... to be empty"
              type="Webspicy::Tester::Result::AssertMet"
              ></failure>
            <failure
              message="Expected [&quot;programming&quot;,&quot;quality&quot;,&quot;... to be empty"
              type="Webspicy::Tester::Result::AssertMet"
              ></failure>
        </testcase>
        <testcase
          name="when a pathFD is wrong"
          assertions="1"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.00021s"
        >
            <failure
              message="Expected {&quot;ok&quot;:true,&quot;hobbies&quot;:[&quot;pro... to contain the key(s) and value(s) {:ok=&gt;false}"
              type="Webspicy::Tester::Result::AssertMet"
              ></failure>
        </testcase>
        <testcase
          name="when an size is wrong"
          assertions="1"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000188s"
        >
            <failure
              message="Expected [&quot;programming&quot;,&quot;quality&quot;,&quot;... to have a size of 4, actual size is: 3"
              type="Webspicy::Tester::Result::AssertMet"
              ></failure>
        </testcase>
    </testsuite>
    <testsuite
      name="formaldef/wrong-checkbox.yml"
      tests="2"
      errors="0"
      failures="4"
      time="0.000675s"
    >
        <testcase
          name="when the response is as expected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.00023s"
        >
            <failure
              message="&lt;!&gt; Unimplemented postcondition (not instrumented)"
              type="Webspicy::Tester::Result::PostconditionMet"
              ></failure>
            <failure
              message="&lt;x&gt; Succeeding postcondition (is instrumented)"
              type="Webspicy::Tester::Result::PostconditionMet"
              ></failure>
        </testcase>
        <testcase
          name="when the response is as expected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000232s"
        >
            <failure
              message="&lt;!&gt; Unimplemented errcondition (not instrumented)"
              type="Webspicy::Tester::Result::ErrconditionMet"
              ></failure>
            <failure
              message="&lt;x&gt; Succeeding errcondition (is instrumented)"
              type="Webspicy::Tester::Result::ErrconditionMet"
              ></failure>
        </testcase>
    </testsuite>
    <testsuite
      name="formaldef/wrong-condition.yml"
      tests="2"
      errors="0"
      failures="4"
      time="0.004586s"
    >
        <testcase
          name="when the response is as expected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.00118s"
        >
            <failure
              message="It is not met"
              type="Webspicy::Tester::Result::PostconditionMet"
              ></failure>
            <failure
              message="Is is not met (deprecated protocol)"
              type="Webspicy::Tester::Result::PostconditionMet"
              ></failure>
        </testcase>
        <testcase
          name="when the response is as expected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000949s"
        >
            <failure
              message="It is not met"
              type="Webspicy::Tester::Result::ErrconditionMet"
              ></failure>
            <failure
              message="Is is not met (deprecated protocol)"
              type="Webspicy::Tester::Result::ErrconditionMet"
              ></failure>
        </testcase>
    </testsuite>
    <testsuite
      name="formaldef/wrong-error-output.yml"
      tests="3"
      errors="0"
      failures="1"
      time="0.003072s"
    >
        <testcase
          name="when the output is as expected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000712s"
        >
        </testcase>
        <testcase
          name="when the output is not as expected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.001169s"
        >
            <failure
              message="Invalid error: Missing attribute `message`"
              type="Webspicy::Tester::Result::ErrorSchemaMet"
              ></failure>
        </testcase>
        <testcase
          name="when empty with a redirect response"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000159s"
        >
        </testcase>
        <testcase
          name="Specification can be loaded"
          assertions="1"
          classname="Webspicy.Specification"
          status=""
          time="0.003072s"
        >
            <error
              message="Invalid Specification `{&quot;name&quot;=&gt;&quot;Not a valid spec...`"
              type="Finitio::TypeError"
            ></error>
        </testcase>
    </testsuite>
    <testsuite
      name="formaldef/wrong-host.yml"
      tests="1"
      errors="1"
      failures="0"
      time="0.000415s"
    >
        <testcase
          name="when called"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000268s"
        >
            <error
              message="Unable to access host"
              type="Webspicy::Tester::Result::InvocationSuceeded"
            ></error>
        </testcase>
    </testsuite>
    <testsuite
      name="formaldef/wrong-output.yml"
      tests="4"
      errors="0"
      failures="3"
      time="0.001267s"
    >
        <testcase
          name="when the output is as expected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.00021s"
        >
        </testcase>
        <testcase
          name="when an attribute is missing"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000283s"
        >
            <failure
              message="Invalid output: Missing attribute `hobbies`"
              type="Webspicy::Tester::Result::OutputSchemaMet"
              ></failure>
        </testcase>
        <testcase
          name="when an extra attribute is unexpected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000173s"
        >
            <failure
              message="Invalid output: Unrecognized attribute `foo`"
              type="Webspicy::Tester::Result::OutputSchemaMet"
              ></failure>
        </testcase>
        <testcase
          name="when a attribute has the wrong type"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000243s"
        >
            <failure
              message="Invalid output: Invalid Boolean `12`"
              type="Webspicy::Tester::Result::OutputSchemaMet"
              ></failure>
        </testcase>
    </testsuite>
    <testsuite
      name="formaldef/wrong-response.yml"
      tests="5"
      errors="0"
      failures="4"
      time="0.001433s"
    >
        <testcase
          name="when the response is as expected"
          assertions="1"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000207s"
        >
        </testcase>
        <testcase
          name="when the content type is not as expected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000228s"
        >
            <failure
              message="Expected response header `Content-Type` to be `text/csv`, got `application/json`"
              type="Webspicy::Tester::Result::ResponseHeaderMet"
              ></failure>
        </testcase>
        <testcase
          name="when the status is not as expected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000152s"
        >
            <failure
              message="Expected response status to be 400, got 200"
              type="Webspicy::Tester::Result::ResponseStatusMet"
              ></failure>
        </testcase>
        <testcase
          name="when a header is not as expected"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000206s"
        >
            <failure
              message="Expected response header `X-Hello` to be `Dude`, got `World`"
              type="Webspicy::Tester::Result::ResponseHeaderMet"
              ></failure>
        </testcase>
        <testcase
          name="when a header is missing"
          assertions="0"
          classname="Webspicy.Web.Specification.TestCase"
          status=""
          time="0.000146s"
        >
            <failure
              message="Expected response header `X-NotSet` to be set"
              type="Webspicy::Tester::Result::ResponseHeaderMet"
              ></failure>
        </testcase>
    </testsuite>
</testsuites>
