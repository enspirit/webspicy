@import finitio/data

Method =
    String( s | s =~ /^(GET|POST|POST_FORM|PUT|DELETE|PATCH|PUT|OPTIONS)$/ )

Tag = String( s | s.length > 0 )

Schema =
    .Finitio::System <fio> String
      \( s | ::Webspicy.schema(s) )
      \( s | raise "Unsupported"  )

FileUpload =
    .Webspicy::FileUpload <info> {
        path         :  String
        content_type :  String
        param_name   :? String
    }

Specification = .Webspicy::Specification
  <info> {
    name: String
    url: String
    services: [Service]
  }
  <singleservice> {
    name            :? String
    url             :  String
    method          :  Method
    description     :  String
    preconditions   :? [String]|String
    postconditions  :? [String]|String
    errconditions   :? [String]|String
    input_schema    :  Schema
    output_schema   :  Schema
    error_schema    :  Schema
    blackbox        :? String
    default_example :? TestCase
    examples        :? [TestCase]
    counterexamples :? [TestCase]
  }

Service =
    .Webspicy::Specification::Service <info> {
        method          :  Method
        description     :  String
        preconditions   :? [String]|String
        postconditions  :? [String]|String
        errconditions   :? [String]|String
        input_schema    :  Schema
        output_schema   :  Schema
        error_schema    :  Schema
        blackbox        :? String
        default_example :? TestCase
        examples        :? [TestCase]
        counterexamples :? [TestCase]
    }

TestCase = .Webspicy::Specification::TestCase
    <info> {
        description      :? String
        dress_params     :? Boolean
        params           :? Params
        headers          :? .Hash
        body             :? String
        file_upload      :? FileUpload
        seeds            :? String
        requester        :? String
        metadata         :? { ...: .Object }
        expected         :? {
            status       :? StatusRange
            content_type :? String|Nil
            error        :? String
            headers      :? .Hash
        }
        assert           :? [String]
        tags             :? [Tag]
    }
    <v2> {
        description      :? String
        for              :? String
        tags             :? [Tag]
        metadata         :? { ...: .Object }
        request          :? {
            headers      :? Headers
            body         :? String
            file_upload  :? FileUpload
        }
        dress_input      :? Boolean
        input            :? Input
        response         :? Assertions
        output           :? Assertions
        assert           :? Assertions
    }

Params = .Array|.Hash
Headers = .Hash
Input = .Array|.Hash

StatusRange = .Webspicy::Support::StatusRange
  <int> Integer
  <str> String(s | s =~ /^\dxx$/ )

Assertions =
  <hash>   { ... : Regexp|Scalar|Assertions }
  <array>  [Assertions]
  <assert> String

Regexp = .Regexp <str> .String( s | s =~ %r{^\/(.*?)\/$} )
        \( s | Regexp.compile(s[1...-1]) )
        \( r | r.to_s )

Scalar = .Integer|.Float|.String|.NilClass
