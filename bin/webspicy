#!/usr/bin/env ruby
#/
#/ Document & test web services as black-box operations.
#/ (c) Enspirit SRL. Distributed under MIT licence.
#/
#/ Usage: webspicy [options] URL                 # run default test againt url
#/ Usage: webspicy [options] path/to/config.rb   # run whole test suite
#/ Usage: webspicy [options] path/to/spec.yml    # run a single test
#/
#/ Options:
#/ -h, --help       Show this help message
#/ -k, --insecure   Allow insecure server connections when using SSL
#/ -v, --version    Show webspicy version
#/     --debug      Same as LOG_LEVEL=DEBUG, takes precedence
#/
#/ Recognized env vars:
#/ - ROBUST=no|only|generated     execute no counterexamples (only them, only generated ones)
#/ - LOG_LEVEL=INFO|DEBUG|...     set log level to the appropriate level
#/ - RESOURCE=...                 restrict to .yml test files matching the pattern
#/ - METHOD=GET|POST|DELETE...    execute only tests matching the HTTP verb
#/ - TAG=...                      execute only tests matching the given tag
#/ - FAILFAST=yes|no              stop executing tests on first failure
#/ - INSECURE=yes|no              allow insecure server connections when using SSL
#/
require 'webspicy'
require 'webspicy/tester'
require 'optparse'

def showhelp
  file = __FILE__
  exec "grep ^#/<'#{file}'|cut -c4-"
end

ARGV.options do |opts|
  opts.on_tail("-h", "--help"){
    showhelp
  }
  opts.on("-v", "--version"){
    puts "webspicy v#{Webspicy::VERSION}, (c) Enspirit SRL"
    exit(0)
  }
  opts.on('-k', '--insecure') {
    ENV['INSECURE'] = 'yes'
  }
  opts.on("--debug") {
    ENV['LOG_LEVEL'] = 'DEBUG'
    Webspicy::LOGGER.level = Logger.const_get(ENV['LOG_LEVEL'])
  }
  opts.parse!
end

if ARGV.size != 1
  showhelp
  exit(-1)
end

config = Webspicy::Configuration.dress(ARGV[0])
Webspicy::Tester.new(config).call!
